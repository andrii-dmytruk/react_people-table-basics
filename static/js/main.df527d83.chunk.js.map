{"version":3,"sources":["components/Navigation/Navigation.tsx","pages/HomePage/HomePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonInfo/PersonInfo.tsx","types/ErrorType.ts","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","end","className","isActive","classNames","Navigation","role","HomePage","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","ErrorType","PersonInfo","person","selectedPersonSlug","name","sex","born","died","fatherName","motherName","slug","mother","father","isSelected","PeopleTable","peopleList","map","PeoplePage","useParams","useState","setPeopleList","isLoading","setIsLoading","none","errorType","setErrorType","useEffect","people","length","emptyList","find","complementPeopleList","catch","loading","finally","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.df527d83.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n  end?: boolean;\n};\n\nconst PageNavLink: React.FC<Props> = ({ to, text, end }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={to}\n    end={end}\n  >\n    {text}\n  </NavLink>\n);\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" end />\n\n          <PageNavLink to=\"people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  selectedPersonSlug: string;\n};\n\nexport const PersonInfo: React.FC<Props> = ({ person, selectedPersonSlug }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  const isSelected = selectedPersonSlug === slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({ 'has-background-warning': isSelected })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames(\n            { 'has-text-danger': sex === 'f' },\n          )}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <Link to={`/people/${mother.slug}`} className=\"has-text-danger\">\n            {mother.name}\n          </Link>\n        )\n          : motherName || '-'}\n\n      </td>\n      <td>\n        {father ? (\n          <Link to={`/people/${father.slug}`}>\n            {father.name}\n          </Link>\n        )\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","export enum ErrorType{\n  none,\n  loading,\n  emptyList,\n}\n","import { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo';\n\ntype Props = {\n  peopleList: Person[];\n  selectedPersonSlug: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  peopleList,\n  selectedPersonSlug,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleList.map((person) => (\n          <PersonInfo\n            person={person}\n            key={person.slug}\n            selectedPersonSlug={selectedPersonSlug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { ErrorType } from '../../types/ErrorType';\n\nconst complementPeopleList = (people: Person[]) => {\n  return people.map((person) => (\n    {\n      ...person,\n      father: people.find(father => person.fatherName === father.name),\n      mother: people.find(mother => person.motherName === mother.name),\n    }\n  ));\n};\n\nexport const PeoplePage = () => {\n  const { slug = '' } = useParams();\n\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorType, setErrorType] = useState<ErrorType>(ErrorType.none);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(people => {\n        if (!people.length) {\n          setErrorType(ErrorType.emptyList);\n        }\n\n        setPeopleList(complementPeopleList(people));\n      })\n      .catch(() => setErrorType(ErrorType.loading))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {(errorType === ErrorType.none && !isLoading) && (\n            <PeopleTable peopleList={peopleList} selectedPersonSlug={slug} />\n          )}\n\n          {errorType === ErrorType.loading && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {errorType === ErrorType.emptyList && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}